{
  "version": 3,
  "sources": ["../src/test.ts", "../src/index.ts"],
  "sourcesContent": ["import { is_object } from './index'\nclass Hello{\n  constructor(){\n    console.log('making Hello')\n  }\n}\nfunction createSimplePromise(shouldSucceed: boolean): Promise<string> {\n  return new Promise((resolve, reject) => {\n    // Simulate an asynchronous operation, e.g., a network request or a timer\n    setTimeout(() => {\n      if (shouldSucceed) {\n        resolve(\"Operation successful!\"); // Resolve the promise with a success value\n      } else {\n        reject(new Error(\"Operation failed!\")); // Reject the promise with an error\n      }\n    }, 1000); // Simulate a 1-second delay\n  });\n}\n// Test function to run all tests\nexport function runTests() {\n  let passed = 0\n  let failed = 0\n\n  \n  function test(name: string, condition: boolean) {\n    if (condition) {\n      console.log(`\u2705 ${name}`)\n      passed++\n    } else {\n      console.log(`\u274C ${name}`)\n      failed++\n    }\n  }\n  console.log('Running is_object tests...\\n')\n\n  // Test cases that should return false\n  test('class instance should return true', is_object(new Hello()))\n  test('Set should return false', !is_object(new Set()))\n  test('Function should return true', is_object(() => {}))\n  test('Array should return false', !is_object([1, 2, 3]))\n  test('Number atom should return false', !is_object(42))\n  test('String atom should return false', !is_object('hello'))\n  test('Boolean atom should return false', !is_object(true))\n  test('null should return false', !is_object(null))\n  test('undefined should return false', !is_object(undefined))\n  test('Date should return true', is_object(new Date()))\n  test('RegExp should return true', is_object(/test/))\n  test('Map should return false', !is_object(new Map()))\n  test('Promise should return True', is_object(createSimplePromise(true)))\n  // Test cases that should return true\n  test('Plain object should return true', is_object({}))\n  test('Plain object with properties should return true', is_object({ a: 1, b: 'test' }))\n  test('Object created with Object.create should return true', is_object(Object.create({})))\n\n  console.log(`\\nTest Results: ${passed} passed, ${failed} failed`)\n  \n  if (failed === 0) {\n    console.log('\uD83C\uDF89 All tests passed!')\n    return true\n  } else {\n    console.log('\uD83D\uDCA5 Some tests failed!')\n    return false\n  }\n}\n\n// Run tests if this file is executed directly\nif (typeof require !== 'undefined' && require.main === module) {\n  runTests()\n}\n\n", "export type s2t<T> = Record<string, T>\nexport type s2u = Record<string, unknown>\nexport type p2u = Record<PropertyKey, unknown> \nexport function nl<T>(value: T | null | undefined): T {\n  //todo:check only active on debug mode\n  //return value\n  if (value === null || value === undefined) {\n    throw new Error('Value cannot be null or undefined')\n  }\n  return value\n}\nexport type Key = number | string //should i use properykey for this?\nexport type Atom = number | string | boolean \nexport function is_atom(x: unknown): x is Atom {\n  if (x == null) return false\n  return ['number', 'string', 'boolean'].includes(typeof x)\n}\nexport function is_key(x: unknown): x is Key {\n  if (x == null) return false\n  return ['number', 'string'].includes(typeof x)\n}\nexport function is_atom_ex(v: unknown, place: string, k = ''): v is Atom {\n  if (is_atom(v)) return true\n  console.warn('non-atom', place, k, v)\n  return false\n}\nexport function get_error(x:unknown){\n  if (x instanceof Error)\n    return x\n  const str = String(x)\n  return new Error(str)\n}\nexport function is_object<T extends object=s2u>(value: unknown): value is T{\n  if (value == null) return false;\n  \n  // Accept objects and functions\n  if (typeof value !== 'object' && typeof value !== 'function') return false;\n  \n  // Exclude known non-object types\n  if (Array.isArray(value)) return false;\n  if (value instanceof Set) return false;\n  if (value instanceof Map) return false;\n  \n  return true;\n}\nexport function has_key(obj: unknown, k: string): boolean {\n  if (!is_object(obj)) return false\n  return k in obj\n}\nexport function* objects_only(ar:unknown[]){\n  for (const item of ar)\n    if (is_object(item))\n      yield item\n}\n\nexport function has_keys(obj: unknown, keys: string[]): boolean {\n  if (!is_object(obj)) return false\n  for (const k of keys) if (k in keys) return true\n  return false\n}\nexport type strset = Set<string>\nexport type s2num = Record<string, number>\nexport type s2s = Record<string, string>\nexport type num2num = Record<number, number>\n\nexport function pk<T, K extends keyof T>(obj: T | undefined, ...keys: K[]): Pick<T, K> {\n  const ret: Record<PropertyKey,unknown> = {} \n  keys.forEach((key) => {\n    ret[key] = obj?.[key]\n  })\n  return ret as Pick<T, K> \n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACgCO,SAAS,UAAgC,OAA2B;AACzE,MAAI,SAAS,KAAM,QAAO;AAG1B,MAAI,OAAO,UAAU,YAAY,OAAO,UAAU,WAAY,QAAO;AAGrE,MAAI,MAAM,QAAQ,KAAK,EAAG,QAAO;AACjC,MAAI,iBAAiB,IAAK,QAAO;AACjC,MAAI,iBAAiB,IAAK,QAAO;AAEjC,SAAO;AACT;;;AD3CA,IAAM,QAAN,MAAW;AAAA,EACT,cAAa;AACX,YAAQ,IAAI,cAAc;AAAA,EAC5B;AACF;AACA,SAAS,oBAAoB,eAAyC;AACpE,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAEtC,eAAW,MAAM;AACf,UAAI,eAAe;AACjB,gBAAQ,uBAAuB;AAAA,MACjC,OAAO;AACL,eAAO,IAAI,MAAM,mBAAmB,CAAC;AAAA,MACvC;AAAA,IACF,GAAG,GAAI;AAAA,EACT,CAAC;AACH;AAEO,SAAS,WAAW;AACzB,MAAI,SAAS;AACb,MAAI,SAAS;AAGb,WAAS,KAAK,MAAc,WAAoB;AAC9C,QAAI,WAAW;AACb,cAAQ,IAAI,UAAK,IAAI,EAAE;AACvB;AAAA,IACF,OAAO;AACL,cAAQ,IAAI,UAAK,IAAI,EAAE;AACvB;AAAA,IACF;AAAA,EACF;AACA,UAAQ,IAAI,8BAA8B;AAG1C,OAAK,qCAAqC,UAAU,IAAI,MAAM,CAAC,CAAC;AAChE,OAAK,2BAA2B,CAAC,UAAU,oBAAI,IAAI,CAAC,CAAC;AACrD,OAAK,+BAA+B,UAAU,MAAM;AAAA,EAAC,CAAC,CAAC;AACvD,OAAK,6BAA6B,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AACvD,OAAK,mCAAmC,CAAC,UAAU,EAAE,CAAC;AACtD,OAAK,mCAAmC,CAAC,UAAU,OAAO,CAAC;AAC3D,OAAK,oCAAoC,CAAC,UAAU,IAAI,CAAC;AACzD,OAAK,4BAA4B,CAAC,UAAU,IAAI,CAAC;AACjD,OAAK,iCAAiC,CAAC,UAAU,MAAS,CAAC;AAC3D,OAAK,2BAA2B,UAAU,oBAAI,KAAK,CAAC,CAAC;AACrD,OAAK,6BAA6B,UAAU,MAAM,CAAC;AACnD,OAAK,2BAA2B,CAAC,UAAU,oBAAI,IAAI,CAAC,CAAC;AACrD,OAAK,8BAA8B,UAAU,oBAAoB,IAAI,CAAC,CAAC;AAEvE,OAAK,mCAAmC,UAAU,CAAC,CAAC,CAAC;AACrD,OAAK,mDAAmD,UAAU,EAAE,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC;AACtF,OAAK,wDAAwD,UAAU,uBAAO,OAAO,CAAC,CAAC,CAAC,CAAC;AAEzF,UAAQ,IAAI;AAAA,gBAAmB,MAAM,YAAY,MAAM,SAAS;AAEhE,MAAI,WAAW,GAAG;AAChB,YAAQ,IAAI,6BAAsB;AAClC,WAAO;AAAA,EACT,OAAO;AACL,YAAQ,IAAI,8BAAuB;AACnC,WAAO;AAAA,EACT;AACF;AAGA,IAAI,OAAO,YAAY,eAAe,QAAQ,SAAS,QAAQ;AAC7D,WAAS;AACX;",
  "names": []
}
